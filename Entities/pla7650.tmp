[gd_scene load_steps=9 format=3 uid="uid://cinj7tasax4k1"]

[ext_resource type="Texture2D" uid="uid://b37jqh0kry3br" path="res://tile_0111.png" id="1_c2wsu"]

[sub_resource type="GDScript" id="GDScript_bnnk0"]
script/source = "extends CharacterBody2D

const JUMP_VELOCITY = -300.0

var gravity = ProjectSettings.get_setting(\"physics/2d/default_gravity\")
var is_dead = false


func _physics_process(delta):
	velocity.y += gravity * delta

	if is_dead == false:
		if Input.is_action_just_pressed(\"jump\"):
			$AnimationPlayer.play(\"jump\")
			velocity.y = JUMP_VELOCITY

	move_and_slide()


func _on_hurt_box_body_entered(body: Node2D):
	if body == $Roof2D:
		return
	
	$AnimationPlayer.play(\"death\")
	is_dead = true
	get_tree().paused = true
	if $AnimationPlayer.is_playing(): 
		return  
	queue_free()
"

[sub_resource type="CircleShape2D" id="CircleShape2D_pyhfo"]
radius = 5.0

[sub_resource type="Animation" id="Animation_ngrxf"]
resource_name = "death"
length = 2.0
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:rotation")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 2),
"transitions": PackedFloat32Array(0.535887, 0.5),
"update": 0,
"values": [0.0, -18.8496]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".:scale")
tracks/1/interp = 2
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 2),
"transitions": PackedFloat32Array(1, 8.28211),
"update": 0,
"values": [Vector2(1, 1), Vector2(0, 0)]
}

[sub_resource type="Animation" id="Animation_pdv12"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:rotation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.0]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(1, 1)]
}

[sub_resource type="Animation" id="Animation_utxp5"]
resource_name = "jump"
length = 0.4
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:rotation")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.1, 0.3, 0.4),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 0,
"values": [0.0, -0.172788, 0.233874, 0.0]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.2, 0.4),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Vector2(1, 1), Vector2(1.2, 1.2), Vector2(1, 1)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_6gtvm"]
_data = {
"RESET": SubResource("Animation_pdv12"),
"death": SubResource("Animation_ngrxf"),
"jump": SubResource("Animation_utxp5")
}

[sub_resource type="CircleShape2D" id="CircleShape2D_3vvh8"]
radius = 6.0

[node name="Player" type="CharacterBody2D" groups=["player"]]
process_mode = 3
collision_mask = 2
motion_mode = 1
wall_min_slide_angle = 0.18326
script = SubResource("GDScript_bnnk0")

[node name="Sprite2D" type="Sprite2D" parent="."]
position = Vector2(1, -8)
texture = ExtResource("1_c2wsu")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(1, -7)
shape = SubResource("CircleShape2D_pyhfo")

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_6gtvm")
}

[node name="HurtBox" type="Area2D" parent="."]
collision_mask = 2

[node name="CollisionShape2D" type="CollisionShape2D" parent="HurtBox"]
position = Vector2(1, -7)
shape = SubResource("CircleShape2D_3vvh8")
debug_color = Color(0.921569, 0.254902, 0.333333, 0.419608)

[connection signal="body_entered" from="HurtBox" to="." method="_on_hurt_box_body_entered"]
